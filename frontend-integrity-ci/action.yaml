name: CI / Test frontend integrity
description: Check frontend integrity

inputs:
  token:
    description: 'The GitHub authentication token'
    required: false
    default: ${{ github.token }}
  auth_json:
    description: 'The auth.json content (for other bundles)'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ./main

    # Checkout frontend

    - name: Get PR infos
      uses: 8BitJonny/gh-get-current-pr@1.4.0
      id: PR
      with:
        github-token: ${{ inputs.token }}
        sha: ${{ github.event.pull_request.head.sha }}
        filterOutClosed: true

    - name: Get frontend branch from PR description
      shell: bash
      id: get-frontend-branch
      run: 'echo ::set-output name=frontend-branch::$(BRANCH_REG=$(echo $PRBODY|tr -d ''\n''|sed -E ''s/.*front branch: \[([_[:alnum:]-]+).*/\1/g'');echo $BRANCH_REG)'
      env:
        PRBODY: ${{ steps.PR.outputs.pr_body }}

    - name: Checkout frontend
      uses: actions/checkout@v3
      with:
        repository: restarteco/reparcar-front-next
        ref: ${{ steps.get-frontend-branch.outputs.frontend-branch }}
        token: ${{ inputs.token }}
        path: ./frontend

    # Backend MS

    - name: Add git auth JSON file
      shell: bash
      run: echo '${{ inputs.auth_json }}' > auth.json
      working-directory: ./main

    - name: Setup PHP, extensions and composer with shivammathur/setup-php
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
      env:
        update: true

    - name: Get composer cache directory
      id: composer-cache-dir
      shell: bash
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      working-directory: ./main

    - name: Cache composer dependencies
      uses: actions/cache@v3
      id: composer-cache
      with:
        path: ${{ steps.composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      shell: bash
      run: composer install
      working-directory: ./main

    - name: Export GraphQL schema to frontend
      shell: bash
      run: echo $(bin/console api:graphql:export) > ../frontend/packages/reparcar-network-${{ github.event.repository.name }}/schema.graphql
      working-directory: ./main

    # Frontend

    - name: Create commit comment
      uses: peter-evans/commit-comment@v1
      with:
        body: Frontend integrity CI runs using branch reparcar-frontend-next/**${{ steps.get-frontend-branch.outputs.frontend-branch }}**

    - name: Use Node - version defined by frontend
      uses: actions/setup-node@v3
      with:
        node-version-file: ./frontend/.nvmrc

    - name: Frontend - Generate code from GraphQL
      shell: bash
      # Frontend package MUST be named as @reparcar/network-{MS_name}
      run: yarn workspace @reparcar/network-${{ github.event.repository.name }} gen:graphql:ts
      working-directory: ./frontend

    - name: Frontend - Check types
      shell: bash
      run: yarn c:type
      working-directory: ./frontend
